// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PETDataBase.EntityFramework;

namespace PETDataBase.EntityFramework.Migrations
{
    [DbContext(typeof(PETDBContext))]
    [Migration("20210310105341_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PETDataBase.Domain.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastEdit")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ReportId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrencyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Informant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ethnicity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EyeColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HairColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SkinColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("Informants");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Informant");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Keyword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InformantId")
                        .HasColumnType("int");

                    b.Property<string>("KeyWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ObservantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InformantId");

                    b.HasIndex("ObservantId");

                    b.ToTable("Keyword");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nationalities");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Observant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ethnicity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EyeColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("HairColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SkinColor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("NationalityId");

                    b.ToTable("Observants");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaymentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ObservantId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ObservantId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ObservantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObservantId");

                    b.ToTable("Subject");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Subject");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Agent", b =>
                {
                    b.HasBaseType("PETDataBase.Domain.Models.Informant");

                    b.HasDiscriminator().HasValue("Agent");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Group", b =>
                {
                    b.HasBaseType("PETDataBase.Domain.Models.Subject");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Group");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Admin", b =>
                {
                    b.HasBaseType("PETDataBase.Domain.Models.Agent");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Comment", b =>
                {
                    b.HasOne("PETDataBase.Domain.Models.Agent", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("PETDataBase.Domain.Models.Report", null)
                        .WithMany("Comments")
                        .HasForeignKey("ReportId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Informant", b =>
                {
                    b.HasOne("PETDataBase.Domain.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("PETDataBase.Domain.Models.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId");

                    b.HasOne("PETDataBase.Domain.Models.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId");

                    b.Navigation("Currency");

                    b.Navigation("Nationality");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Keyword", b =>
                {
                    b.HasOne("PETDataBase.Domain.Models.Informant", null)
                        .WithMany("KeyWords")
                        .HasForeignKey("InformantId");

                    b.HasOne("PETDataBase.Domain.Models.Observant", null)
                        .WithMany("KeyWords")
                        .HasForeignKey("ObservantId");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Observant", b =>
                {
                    b.HasOne("PETDataBase.Domain.Models.Group", null)
                        .WithMany("Members")
                        .HasForeignKey("GroupId");

                    b.HasOne("PETDataBase.Domain.Models.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId");

                    b.Navigation("Nationality");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Report", b =>
                {
                    b.HasOne("PETDataBase.Domain.Models.Informant", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("PETDataBase.Domain.Models.Observant", null)
                        .WithMany("Reports")
                        .HasForeignKey("ObservantId");

                    b.HasOne("PETDataBase.Domain.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");

                    b.Navigation("Author");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Subject", b =>
                {
                    b.HasOne("PETDataBase.Domain.Models.Observant", "Observant")
                        .WithMany()
                        .HasForeignKey("ObservantId");

                    b.Navigation("Observant");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Informant", b =>
                {
                    b.Navigation("KeyWords");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Observant", b =>
                {
                    b.Navigation("KeyWords");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Report", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("PETDataBase.Domain.Models.Group", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
